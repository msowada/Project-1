In this unit we learned about the command line in Linux. 
It started with the basic file commands and navigating the command line to
expanding into file searching, combining commands, and adding command options. 
Then using text processing and text editing to develop a custom command-line script.

Activites using the command line

1)Take Five and Practice the Command Line

Instructions
Using only the command line, complete the following tasks from within the ~/Cybersecurity-Lesson-Plans/03-terminal/student/take_5/ folder in your Ubuntu VM:

Create a folder called Internal_Investigation_Employee_A.

Navigate into the Internal_Investigation_Employee_A folder.

From within the Internal_Investigation_Employee_A folder, print the working directory to confirm you are in the correct place.

Create three files inside the Internal_Investigation_Employee_A folder:

email_evidence
log_evidence
web_evidence

Delete the file called web_evidence as you realized Wonka has no web logs captured.

Display (list) all the files created.
Clear the terminal window

sysadmin~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5 
cd /03-student/day1/cd take_5

mkdir Internal_Investigation_Employee_A
ls
cd Internal_Investigation_Employee_A
pwd
~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_investigation_Employee_A

 Internal_Investigation_Employee_A folder: email_evidence, log_evidence, web_evidence:

touch email_evidence log_evidence web_evidence

Finding your Milky Way
Instructions
Using only the command line, continue to complete the following tasks in the ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5 folder in your Ubuntu VM:
Create an additional folder called Internal_Investigation_Employee_B.
Using absolute paths, move the file email_evidence from Internal_Investigation_Employee_A to Internal_Investigation_Employee_B as you have been told there will not be email evidence for the first employee.
Using absolute paths, copy the file log_evidence from Internal_Investigation_Employee_A to Internal_Investigation_Employee_B, as you have been told there will likely be log evidence from both employees.
Check your directories to confirm the files are all in the correct locations.


cd ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5
mkdir Internal_Investigation_Employee_B
ls
mv ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_A/email_evidence ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_B/
cp ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_A/log_evidence ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_B/
cd ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_A/
ls
cd ~/Cybersecurity-Lesson-Plans/03-Terminal/student/take_5/Internal_Investigation_Employee_B/
ls
The existing files should be log_evidence and email_evidence.


Script files

#!bash my_script.sh 
Run nano my_script.sh
#!/bin/bash
echo "Hello World."

#!/bin/bash is the shell we want to use.
echo "Hello World." is the first line in our script.
Run ls -l my_script.sh.


Run nano my_script.sh.
Enter this script:
#!/bin/bash
name='Jake'
echo "Hello $name."
echo -e "\nThis is my script.\n"
echo -e "The files in $PWD are: \n$(ls)"
echo -e "\nCopying the passwd file to your current directory.\n"
cp /etc/passwd $PWD
echo -e "The files in $PWD are now: \n$(ls)"
echo " "
echo "Have a great day!"
Next, run ./my_script.sh


IP look_up.sh
#!/bin/bash
curl -s http://ipinfo.io/$1 | grep country| awk -F: '{print $2}'


Log_analysis.sh
#!/bin/bash
cat LogA.txt | sed 
Update1_Combined_Access_logs.txt 
cat Update1_Combined_Access_logs.txt | awk -F" " '{print $4, $6}' > Update2_Combined_Access_logs.txt

setup day 3 activity
#!/usr/bin/env bash
# Check for root access
if [ "$EUID" -ne 0 ]
then
    echo "Please run this script with sudo"
    exit
fi
# Start needed processes
systemctl start vsftpd xinetd dovecot apache2 samba

# Set SUID bit for the `find` command
chmod u+s $(which find)

echo "Completed setup for day 3"


Roulette_Dealer
#!bin/bash
sed -n 1p $1_Dealer_schedule
cat $1_Dealer_schedule | grep "$2 $3" | awk -F" " '{print $1, $2, $3, $4, $5, $6, $7, $8}'
echo
echo


